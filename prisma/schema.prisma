// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  // url      = env("DATABASE_URL")
  url     = "file:./dev.db"
}

model Link {
  id          Int @id @default(autoincrement())
  createdAt   DateTime @default(now())
  description String
  url         String
  // 認証用
  postedBy    User? @relation(fields: [postedById], references: [id]) // LinkモデルのpostedByフィールドは、Userモデルとのリレーション（関係）を表しています。このフィールドは、LinkがどのUserによって投稿されたかを示すために使われる。
  postedById  Int? // foreign key Userモデルのidフィールドを参照している

  votes Vote[]
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  links Link[]

  votes Vote[]
}

model Vote {
  id Int @id @default(autoincrement())
  link Link @relation(fields: [linkId], references: [id])
  linkId Int
  user User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([linkId, userId])
}
// ↑↓
// npx prisma migrate dev
// -- CreateTable
// CREATE TABLE "Link" (
//     "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
//     "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
//     "description" TEXT NOT NULL,
//     "url" TEXT NOT NULL
// );
